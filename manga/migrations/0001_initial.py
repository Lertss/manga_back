# Generated by Django 4.2.2 on 2023-08-18 14:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last name')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cat_name', models.CharField(choices=[('Manga', 'Manga'), ('Manhua', 'Manhua'), ('Manhwa', 'Manhwa'), ('Comics', 'Comics'), ('Web', 'Web'), ('Other', 'Other')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('volumes', models.IntegerField()),
                ('num', models.FloatField()),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('time_prod', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(unique=True)),
                ('comments', models.ManyToManyField(blank=True, related_name='chapter_comments', to='common.comment')),
            ],
            options={
                'ordering': ['-num'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('counts', models.CharField(choices=[('Afghanistan', 'Afghanistan'), ('Albania', 'Albania'), ('Algeria', 'Algeria'), ('Andorra', 'Andorra'), ('Angola', 'Angola'), ('Antigua and Barbuda', 'Antigua and Barbuda'), ('Argentina', 'Argentina'), ('Armenia', 'Armenia'), ('Australia', 'Australia'), ('Austria', 'Austria'), ('Azerbaijan', 'Azerbaijan'), ('Bahamas', 'Bahamas'), ('Bahrain', 'Bahrain'), ('Bangladesh', 'Bangladesh'), ('Barbados', 'Barbados'), ('Belarus', 'Belarus'), ('Belgium', 'Belgium'), ('Belize', 'Belize'), ('Benin', 'Benin'), ('Bhutan', 'Bhutan'), ('Bolivia', 'Bolivia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Botswana', 'Botswana'), ('Brazil', 'Brazil'), ('Brunei', 'Brunei'), ('Bulgaria', 'Bulgaria'), ('Burkina Faso', 'Burkina Faso'), ('Burundi', 'Burundi'), ('Cabo Verde', 'Cabo Verde'), ('Cambodia', 'Cambodia'), ('Cameroon', 'Cameroon'), ('Canada', 'Canada'), ('Central African Republic', 'Central African Republic'), ('Chad', 'Chad'), ('Chile', 'Chile'), ('China', 'China'), ('Colombia', 'Colombia'), ('Comoros', 'Comoros'), ('Congo (Brazzaville)', 'Congo (Brazzaville)'), ('Congo (Kinshasa)', 'Congo (Kinshasa)'), ('Costa Rica', 'Costa Rica'), ("Cote d'Ivoire", "Cote d'Ivoire"), ('Croatia', 'Croatia'), ('Cuba', 'Cuba'), ('Cyprus', 'Cyprus'), ('Czech Republic', 'Czech Republic'), ('Denmark', 'Denmark'), ('Djibouti', 'Djibouti'), ('Dominica', 'Dominica'), ('Dominican Republic', 'Dominican Republic'), ('Ecuador', 'Ecuador'), ('Egypt', 'Egypt'), ('El Salvador', 'El Salvador'), ('Equatorial Guinea', 'Equatorial Guinea'), ('Eritrea', 'Eritrea'), ('Estonia', 'Estonia'), ('Eswatini', 'Eswatini'), ('Ethiopia', 'Ethiopia'), ('Fiji', 'Fiji'), ('Finland', 'Finland'), ('France', 'France'), ('Gabon', 'Gabon'), ('Gambia', 'Gambia'), ('Georgia', 'Georgia'), ('Germany', 'Germany'), ('Ghana', 'Ghana'), ('Greece', 'Greece'), ('Grenada', 'Grenada'), ('Guatemala', 'Guatemala'), ('Guinea', 'Guinea'), ('Guinea-Bissau', 'Guinea-Bissau'), ('Guyana', 'Guyana'), ('Haiti', 'Haiti'), ('Honduras', 'Honduras'), ('Hungary', 'Hungary'), ('Iceland', 'Iceland'), ('India', 'India'), ('Indonesia', 'Indonesia'), ('Iran', 'Iran'), ('Iraq', 'Iraq'), ('Ireland', 'Ireland'), ('Israel', 'Israel'), ('Italy', 'Italy'), ('Jamaica', 'Jamaica'), ('Japan', 'Japan'), ('Jordan', 'Jordan'), ('Kazakhstan', 'Kazakhstan'), ('Kenya', 'Kenya'), ('Kiribati', 'Kiribati'), ('Korea, North', 'Korea, North'), ('Korea, South', 'Korea, South'), ('Kosovo', 'Kosovo'), ('Kuwait', 'Kuwait'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Laos', 'Laos'), ('Latvia', 'Latvia'), ('Lebanon', 'Lebanon'), ('Lesotho', 'Lesotho'), ('Liberia', 'Liberia'), ('Libya', 'Libya'), ('Liechtenstein', 'Liechtenstein'), ('Lithuania', 'Lithuania'), ('Luxembourg', 'Luxembourg'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Malaysia', 'Malaysia'), ('Maldives', 'Maldives'), ('Mali', 'Mali'), ('Malta', 'Malta'), ('Marshall Islands', 'Marshall Islands'), ('Mauritania', 'Mauritania'), ('Mauritius', 'Mauritius'), ('Mexico', 'Mexico'), ('Micronesia', 'Micronesia'), ('Moldova', 'Moldova'), ('Monaco', 'Monaco'), ('Mongolia', 'Mongolia'), ('Montenegro', 'Montenegro'), ('Morocco', 'Morocco'), ('Mozambique', 'Mozambique'), ('Myanmar', 'Myanmar'), ('Namibia', 'Namibia'), ('Nauru', 'Nauru'), ('Nepal', 'Nepal'), ('Netherlands', 'Netherlands'), ('New Zealand', 'New Zealand'), ('Nicaragua', 'Nicaragua'), ('Niger', 'Niger'), ('Nigeria', 'Nigeria'), ('North Macedonia', 'North Macedonia'), ('Norway', 'Norway'), ('Oman', 'Oman'), ('Pakistan', 'Pakistan'), ('Palau', 'Palau'), ('Palestine', 'Palestine'), ('Panama', 'Panama'), ('Papua New Guinea', 'Papua New Guinea'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Philippines', 'Philippines'), ('Poland', 'Poland'), ('Portugal', 'Portugal'), ('Qatar', 'Qatar'), ('Romania', 'Romania'), ('Russia', 'Russia'), ('Rwanda', 'Rwanda'), ('Saint Kitts and Nevis', 'Saint Kitts and Nevis'), ('Saint Lucia', 'Saint Lucia'), ('Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'), ('Samoa', 'Samoa'), ('San Marino', 'San Marino'), ('Sao Tome and Principe', 'Sao Tome and Principe'), ('Saudi Arabia', 'Saudi Arabia'), ('Senegal', 'Senegal'), ('Serbia', 'Serbia'), ('Seychelles', 'Seychelles'), ('Sierra Leone', 'Sierra Leone'), ('Singapore', 'Singapore'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Solomon Islands', 'Solomon Islands'), ('Somalia', 'Somalia'), ('South Africa', 'South Africa'), ('South Sudan', 'South Sudan'), ('Spain', 'Spain'), ('Sri Lanka', 'Sri Lanka'), ('Sudan', 'Sudan'), ('Suriname', 'Suriname'), ('Sweden', 'Sweden'), ('Switzerland', 'Switzerland'), ('Syria', 'Syria'), ('Taiwan', 'Taiwan'), ('Tajikistan', 'Tajikistan'), ('Tanzania', 'Tanzania'), ('Thailand', 'Thailand'), ('Timor-Leste', 'Timor-Leste'), ('Togo', 'Togo'), ('Tonga', 'Tonga'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Tunisia', 'Tunisia'), ('Turkey', 'Turkey'), ('Turkmenistan', 'Turkmenistan'), ('Tuvalu', 'Tuvalu'), ('Uganda', 'Uganda'), ('Ukraine', 'Ukraine'), ('United Arab Emirates', 'United Arab Emirates'), ('United Kingdom', 'United Kingdom'), ('United States', 'United States'), ('Uruguay', 'Uruguay'), ('Uzbekistan', 'Uzbekistan'), ('Vanuatu', 'Vanuatu'), ('Vatican City', 'Vatican City'), ('Venezuela', 'Venezuela'), ('Vietnam', 'Vietnam'), ('Yemen', 'Yemen'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genr_name', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Apocalypse', 'Apocalypse'), ('Comedy', 'Comedy'), ('Cyberpunk', 'Cyberpunk'), ('Detective', 'Detective'), ('Drama', 'Drama'), ('Fairy Tale', 'Fairy Tale'), ('Fantasy', 'Fantasy'), ('Gothic', 'Gothic'), ('Harem', 'Harem'), ('History', 'History'), ('Horror', 'Horror'), ('Josei', 'Josei'), ('Kodomo', 'Kodomo'), ('Maho Kanojo', 'Maho Kanojo'), ('Maho Shoujo', 'Maho Shoujo'), ('Maho Shounen', 'Maho Shounen'), ('Mecha', 'Mecha'), ('Post-apocalypse', 'Post-apocalypse'), ('Romance', 'Romance'), ('School Life', 'School Life'), ('Sci-fi', 'Sci-fi'), ('Seinen', 'Seinen'), ('Sentai', 'Sentai'), ('Shotacon', 'Shotacon'), ('Shoujo', 'Shoujo'), ('Shoujo Ai', 'Shoujo Ai'), ('Shounen', 'Shounen'), ('Shounen Ai', 'Shounen Ai'), ('Slice of Life', 'Slice of Life'), ('Steampunk', 'Steampunk'), ('Western', 'Western'), ('Yaoi', 'Yaoi'), ('Yuri', 'Yuri')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(choices=[('Alchemy', 'Alchemy'), ('Angels', 'Angels'), ('Antihero', 'Antihero'), ('Dystopia', 'Dystopia'), ('Aristocracy', 'Aristocracy'), ('Army', 'Army'), ('Artifacts', 'Artifacts'), ('Gods', 'Gods'), ('Sword Fights', 'Sword Fights'), ('Power Struggle', 'Power Struggle'), ('Future', 'Future'), ('In Color', 'In Color'), ('Web', 'Web'), ('Video Games', 'Video Games'), ('Demon Lord', 'Demon Lord'), ('Magical Creatures', 'Magical Creatures'), ('Memories from Another World', 'Memories from Another World'), ('Survival', 'Survival'), ('Harem', 'Harem'), ('Female Protagonist', 'Female Protagonist'), ('Overpowered Protagonist', 'Overpowered Protagonist'), ('Male Protagonist', 'Male Protagonist'), ('Non-Human Protagonist', 'Non-Human Protagonist'), ('Guilds', 'Guilds'), ('Maids', 'Maids'), ('Gyaru', 'Gyaru'), ('Demons', 'Demons'), ('Friendship', 'Friendship'), ('Slice of Life', 'Slice of Life'), ('Cruel World', 'Cruel World'), ('Animal Companions', 'Animal Companions'), ('Beastmen', 'Beastmen'), ('Zombies', 'Zombies'), ('Game Elements', 'Game Elements'), ('Isekai', 'Isekai'), ('Space', 'Space'), ('Crime', 'Crime'), ('Cooking', 'Cooking'), ('Cultivation', 'Cultivation'), ('Magic Academy', 'Magic Academy'), ('Magic', 'Magic'), ('Medicine', 'Medicine'), ('Revenge', 'Revenge'), ('Monsters', 'Monsters'), ('Music', 'Music'), ('Skills', 'Skills'), ('Mercenaries', 'Mercenaries'), ('Violence / Cruelty', 'Violence / Cruelty'), ('Undead', 'Undead'), ('Ninja', 'Ninja'), ('Reverse Harem', 'Reverse Harem'), ('Office Workers', 'Office Workers'), ('Parody', 'Parody'), ('Dungeons', 'Dungeons'), ('Politics', 'Politics'), ('Police', 'Police'), ('Time Travel', 'Time Travel'), ('Intelligent Races', 'Intelligent Races'), ('Power Levels', 'Power Levels'), ('Reincarnation', 'Reincarnation'), ('Robots', 'Robots'), ('Knights', 'Knights'), ('Samurai', 'Samurai'), ('System', 'System'), ('Identity Concealment', 'Identity Concealment'), ('World Saving', 'World Saving'), ('Medieval', 'Medieval'), ('Steampunk', 'Steampunk'), ('Superheroes', 'Superheroes'), ('Traditional Games', 'Traditional Games'), ('Dumb Protagonist', 'Dumb Protagonist'), ('Smart Protagonist', 'Smart Protagonist'), ('Territory Management', 'Territory Management'), ('Educational Institution', 'Educational Institution'), ('Teacher / Student', 'Teacher / Student')], max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_manga', models.CharField(max_length=100, verbose_name='name_manga')),
                ('name_original', models.CharField(blank=True, max_length=100, verbose_name='name_original')),
                ('english_only_field', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9]*$', 'Only alphanumeric characters are allowed.')])),
                ('time_prod', models.DateTimeField(default=django.utils.timezone.now)),
                ('decency', models.BooleanField(default=False, help_text='For adults? yes/no')),
                ('average_rating', models.FloatField(default=0)),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('review', models.TextField(max_length=1000)),
                ('avatar', models.ImageField(blank=True, default='default/none_avatar.png/', upload_to='static/images/avatars/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='media/products/miniava')),
                ('slug', models.SlugField(unique=True)),
                ('author', models.ManyToManyField(related_name='actors', to='manga.author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='manga.category')),
                ('comments', models.ManyToManyField(blank=True, related_name='manga_comments', to='common.comment')),
                ('counts', models.ManyToManyField(related_name='country', to='manga.country')),
                ('genre', models.ManyToManyField(related_name='genre', to='manga.genre')),
                ('tags', models.ManyToManyField(related_name='tags', to='manga.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='static/images/gallery/')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='galleries', to='manga.chapter')),
            ],
        ),
        migrations.AddField(
            model_name='chapter',
            name='manga',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='manga.manga'),
        ),
    ]
