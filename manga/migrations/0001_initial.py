# Generated by Django 5.2.5 on 2025-08-17 12:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last name"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("country_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "ordering": ["country_name"],
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("genre_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "ordering": ["genre_name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("tag_name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "ordering": ["tag_name"],
            },
        ),
        migrations.CreateModel(
            name="Manga",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_manga",
                    models.CharField(max_length=100, verbose_name="name_manga"),
                ),
                (
                    "name_original",
                    models.CharField(blank=True, max_length=100, verbose_name="name_original"),
                ),
                ("english_only_field", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "decency",
                    models.BooleanField(default=False, help_text="For adults? yes/no"),
                ),
                ("review", models.TextField(max_length=1000)),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        default="default/none_avatar.png/",
                        upload_to="static/images/avatars/",
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(blank=True, null=True, upload_to="media/products/miniava"),
                ),
                ("slug", models.SlugField(unique=True)),
                (
                    "author",
                    models.ManyToManyField(related_name="authors", to="manga.author"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="category",
                        to="manga.category",
                    ),
                ),
                (
                    "country",
                    models.ManyToManyField(related_name="country", to="manga.country"),
                ),
                (
                    "genre",
                    models.ManyToManyField(related_name="genre", to="manga.genre"),
                ),
                ("tags", models.ManyToManyField(related_name="tags", to="manga.tag")),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(blank=True, max_length=100, verbose_name="title"),
                ),
                ("chapter_number", models.IntegerField(verbose_name="chapter_number")),
                ("volume", models.IntegerField(verbose_name="volume")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(unique=True)),
                (
                    "manga",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="manga.manga",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="media/manga/pages/")),
                (
                    "page_number",
                    models.PositiveIntegerField(verbose_name="page_number"),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pages",
                        to="manga.chapter",
                    ),
                ),
            ],
            options={
                "ordering": ["page_number"],
            },
        ),
        migrations.AddConstraint(
            model_name="chapter",
            constraint=models.UniqueConstraint(
                fields=("manga", "volume", "chapter_number"),
                name="unique_chapter_per_manga",
            ),
        ),
        migrations.AddConstraint(
            model_name="page",
            constraint=models.UniqueConstraint(fields=("chapter", "page_number"), name="unique_page_per_chapter"),
        ),
        migrations.AddIndex(
            model_name="manga",
            index=models.Index(fields=["slug"], name="manga_manga_slug_20a47e_idx"),
        ),
    ]
